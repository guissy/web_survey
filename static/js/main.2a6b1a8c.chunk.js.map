{"version":3,"sources":["pages/survey/RadioOption.tsx","store/template.ts","store/templateUtil.ts","pages/survey/RadioQuestion.tsx","store/outline.ts","pages/survey/Nav.tsx","pages/survey/Button.tsx","pages/survey/Footer.tsx","pages/survey/Input.tsx","pages/survey/CheckboxQuestion.tsx","store/surveyStore.tsx","pages/survey/index.tsx","pages/thank/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["RadioOption","name","index","defaultValue","label","checked","onChange","className","type","id","htmlFor","template","feature","input","options","value","pattern","tool","multiple","e","allowmultiple","text","longtext","email","opinion","Number","happiness","getTemplateOpt","question","topic","t","Object","keys","includes","getTemplateOptions","opt","Array","isArray","opts","map","o","getQuestionTitle","title","getQuestionName","topicId","split","join","toLocaleLowerCase","RadioQuestion","description","option","key","outline","questions","allowother","randomize","isprivate","searchable","Nav","topicIndex","setTopicIndex","formValues","outlineOk","finished","filter","startsWith","length","i","onClick","href","toFixed","Button","btnKey","style","position","display","Footer","topicPrev","topicNext","navigate","Input","inputKey","CheckboxQuestion","valueOk","Set","has","add","initState","SurveyStateContext","React","SurveyDispatchContext","reducer","prevState","action","data","Error","SurveyStore","children","state","dispatch","Provider","Index","useState","setBtnKey","values","setValues","submit","useCallback","preventDefault","Math","random","useEffect","document","documentElement","scrollTo","top","onSubmit","getTemplateInput","Thank","App","default","path","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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,MACA,SACA,QACA,aACA,UACA,YACA,CACEX,MAAO,4BACPO,YACE,oEACFtC,SAAU,QAEZ,CACE+B,MAAO,oBACPO,YACE,8HACFtC,SAAU,eAIhB,CACE+B,MAAO,UACPO,YAAa,8BACbtC,SAAU,OACVF,GAAI,UACJ4C,UAAW,CACT,OACA,QACA,YACA,UACA,SACA,MACA,UACA,YACA,CACEX,MAAO,sBACPO,YACE,8DACFtC,SAAU,QAEZ,CACE+B,MAAO,oBACPO,YACE,wHACFtC,SAAU,eAIhB,CACE+B,MAAO,mBACPO,YAAa,iDACbtC,SAAU,OACVF,GAAI,gBACJ4C,UAAW,CACT,WACA,eACA,cACA,UACA,QACA,QACA,OACA,CACEX,MAAO,+BACPO,YACE,uEACFtC,SAAU,QAEZ,CACE+B,MAAO,oBACPO,YACE,iIACFtC,SAAU,eAIhB,CACE+B,MAAO,cACPO,YACE,8EACFxC,GAAI,aACJ4C,UAAW,CACT,CACEX,MAAO,YACPO,YAAa,mDACbtC,SAAU,WACVS,eAAe,EACfkC,YAAY,EACZC,WAAW,EACXzC,QAAS,CACP,QACA,SACA,aACA,SACA,WACA,QACA,SACA,SAGJ,CACE4B,MAAO,kBACP/B,SAAU,OACVsC,YAAa,2DAEf,CACEP,MAAO,eACPO,YAAa,6CACbtC,SAAU,WACVS,eAAe,EACfkC,YAAY,EACZC,WAAW,EACXzC,QAAS,CAAC,UAAW,eAAgB,OAAQ,MAAO,QAAS,aAE/D,CACE4B,MAAO,gBACP/B,SAAU,OACVsC,YACE,8DAEJ,CACEP,MAAO,WACPO,YACE,wEACFtC,SAAU,WACVS,eAAe,EACfkC,YAAY,EACZC,WAAW,EACXzC,QAAS,CAAC,OAAQ,SAAU,SAAU,YAExC,CACE4B,MAAO,iBACP/B,SAAU,OACVsC,YAAa,0DAEf,CACEP,MAAO,cACPO,YACE,gEACFtC,SAAU,WACVS,eAAe,EACfkC,YAAY,EACZC,WAAW,EACXzC,QAAS,CACP,UACA,SACA,OACA,SACA,UACA,eAGJ,CACE4B,MAAO,oBACP/B,SAAU,OACVsC,YAAa,6DAEf,CACEP,MAAO,mBACPO,YACE,2EACFtC,SAAU,WACVS,eAAe,EACfkC,YAAY,EACZC,WAAW,EACXzC,QAAS,CACP,MACA,OACA,SACA,KACA,OACA,OACA,QACA,cACA,QACA,QACA,KACA,OACA,UACA,QACA,SAGJ,CACE4B,MAAO,kBACP/B,SAAU,OACVsC,YAAa,6DAInB,CACEP,MAAO,YACPO,YAAa,4CACbxC,GAAI,YACJ4C,UAAW,CACT,CACEX,MAAO,2BACPO,YACE,6DACFtC,SAAU,WACVS,eAAe,EACfkC,YAAY,EACZC,WAAW,EACXzC,QAAS,CACP,aACA,oBACA,UACA,YACA,cACA,UACA,UACA,kBACA,oBACA,SACA,eAGJ,CACE4B,MAAO,cACP/B,SAAU,OACVsC,YACE,8DAEJ,CACEP,MAAO,kBACPO,YACE,8DACFtC,SAAU,WACVS,eAAe,EACfkC,YAAY,EACZC,WAAW,EACXzC,QAAS,CACP,iBACA,MACA,YACA,eACA,aACA,oBACA,iDACA,cACA,eAGJ,CACE4B,MAAO,gBACP/B,SAAU,OACVsC,YACE,0EAEJ,CACEP,MAAO,WACPO,YACE,qEACFtC,SAAU,WACVS,eAAe,EACfkC,YAAY,EACZC,WAAW,EACXzC,QAAS,CACP,iBACA,gBACA,SACA,WACA,oBACA,mBACA,uBACA,iBACA,2BACA,aACA,kBAGJ,CACE4B,MAAO,iBACP/B,SAAU,OACVsC,YACE,kEAIR,CACEP,MAAO,oBACPO,YAAa,iDACbxC,GAAI,mBACJ4C,UAAW,CACT,CACEX,MAAO,8CACP/B,SAAU,WAEZ,CACE+B,MAAO,uDACP/B,SAAU,WAEZ,CACE+B,MAAO,iCACP/B,SAAU,WAEZ,CACE+B,MAAO,mCACP/B,SAAU,WAEZ,CACE+B,MAAO,6DACP/B,SAAU,WAEZ,CACE+B,MAAO,gDACP/B,SAAU,WAEZ,CACE+B,MAAO,yDACPO,YAAa,oDACbtC,SAAU,cAIhB,CACE+B,MAAO,YACPO,YAAa,kCACbxC,GAAI,WACJ4C,UAAW,CACT,CACEX,MAAO,sBACPO,YAAa,2CACbtC,SAAU,WACVS,eAAe,EACfkC,YAAY,EACZC,WAAW,EACXzC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","file":"static/js/main.2a6b1a8c.chunk.js","sourcesContent":["import React from \"react\";\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface Props {\n  name: string;\n  index: number;\n  defaultValue: string;\n  label: string;\n  checked: boolean;\n  onChange: (name: string, value: string) => void;\n}\n\nconst RadioOption: React.FC<Props> = ({\n  name,\n  index,\n  defaultValue,\n  label,\n  checked,\n  onChange\n}) => {\n  return (\n    <div className=\"form-check\">\n      <input\n        name={name}\n        type=\"radio\"\n        id={name + \".\" + index}\n        className=\"form-check-input\"\n        defaultValue={defaultValue}\n        checked={checked}\n        onChange={() => onChange(name, defaultValue)}\n      />\n      <label htmlFor={name + \".\" + index} className=\"form-check-label\">\n        {label}\n      </label>\n    </div>\n  );\n};\n\nexport default RadioOption;\n","import { QuestionItem } from \"../pages/survey\";\n\nconst template = {\n  feature: () => ({\n    input: \"radiogroup\",\n    options: [\n      {\n        value: \"neverheard\",\n        label: \"🤷 Never heard of it/Not sure what it is\"\n      },\n      {\n        value: \"heard\",\n        label: \"✅ Know what it is, but haven't used it\"\n      },\n      {\n        value: \"used\",\n        label: \"👍 I've used it\"\n      }\n    ]\n  }),\n  pattern: () => ({\n    input: \"radiogroup\",\n    options: [\n      {\n        value: \"use_never\",\n        label: \"Almost always avoid\"\n      },\n      {\n        value: \"use_sparingly\",\n        label: \"Use sparingly\"\n      },\n      {\n        value: \"use_neutral\",\n        label: \"Neutral\"\n      },\n      {\n        value: \"use_frequently\",\n        label: \"Use frequently\"\n      },\n      {\n        value: \"use_always\",\n        label: \" Use as much as I can\"\n      }\n    ]\n  }),\n  tool: () => ({\n    input: \"radiogroup\",\n    options: [\n      {\n        value: \"neverheard\",\n        label: \"🤷 Never heard of it/Not sure what it is\"\n      },\n      {\n        value: \"interested\",\n        label: \"✅ Heard of it > Would like to learn\"\n      },\n      {\n        value: \"not_interested\",\n        label: \"🚫 Heard of it > Not interested\"\n      },\n      {\n        value: \"would_use_again\",\n        label: \"👍 Used it > Would use again\"\n      },\n      {\n        value: \"would_not_use_again\",\n        label: \"👎 Used it > Would avoid\"\n      }\n    ]\n  }),\n  multiple: (e?: QuestionItem) => {\n    const { allowmultiple: a } = e || {};\n    return {\n      input: a ? \"checkboxgroup\" : \"radiogroup\"\n    };\n  },\n  text: () => ({\n    input: \"text\"\n  }),\n  longtext: () => ({\n    input: \"textarea\"\n  }),\n  email: () => ({\n    input: \"email\"\n  }),\n  opinion: () => ({\n    input: \"radiogroup\",\n    type: Number,\n    options: [\n      {\n        value: 0,\n        label: \"Disagree Strongly\"\n      },\n      {\n        value: 1,\n        label: \"Disagree\"\n      },\n      {\n        value: 2,\n        label: \"Neutral\"\n      },\n      {\n        value: 3,\n        label: \"Agree\"\n      },\n      {\n        value: 4,\n        label: \"Agree Strongly\"\n      }\n    ]\n  }),\n  happiness: () => ({\n    input: \"radiogroup\",\n    type: Number,\n    options: [\n      {\n        value: 0,\n        label: \"Very Unhappy\"\n      },\n      {\n        value: 1,\n        label: \"Unhappy\"\n      },\n      {\n        value: 2,\n        label: \"Neutral\"\n      },\n      {\n        value: 3,\n        label: \"Happy\"\n      },\n      {\n        value: 4,\n        label: \"Very Happy\"\n      }\n    ]\n  })\n} as const;\nexport default template;\n","import template from \"./template\";\nimport {\n  QuestionItem,\n  QuestionOpt,\n  QuestionType,\n  RadioOptionItem,\n  RadioQuestionItem,\n  Template,\n  Topic\n} from \"../pages/survey\";\n\nexport function getTemplateOpt(\n  question: QuestionType,\n  topic: Topic\n): QuestionOpt | null {\n  const name =\n    (question && (question as QuestionItem).template) || topic.template;\n  const t = name as keyof Template;\n  let questionOpt: QuestionOpt | null;\n  if (Object.keys(template).includes(t)) {\n    questionOpt = template[t](question as QuestionItem) as QuestionOpt;\n  } else {\n    questionOpt = null;\n  }\n  return questionOpt;\n}\n\nexport function getTemplateInput(question: QuestionType, topic: Topic): string {\n  const opt = getTemplateOpt(question, topic);\n  if (opt) {\n    return opt.input;\n  } else {\n    return \"\";\n  }\n}\n\nexport function getTemplateOptions(\n  question: QuestionType,\n  topic: Topic\n): RadioOptionItem[] {\n  const opt = getTemplateOpt(question, topic);\n  if (opt && Array.isArray(opt.options)) {\n    return opt.options;\n  } else {\n    let options = [] as RadioOptionItem[];\n    const opts = (question as QuestionItem).options;\n    if (Array.isArray(opts)) {\n      options = opts.map(o => ({ value: o, label: o }));\n    }\n    return options;\n  }\n}\n\nexport function getQuestionTitle(question: RadioQuestionItem | string) {\n  const isQuestionObj = typeof question === \"string\";\n  const title = isQuestionObj\n    ? question\n    : (question as RadioQuestionItem).title;\n  return title;\n}\n\nexport function getQuestionName(\n  question: RadioQuestionItem | string,\n  topicId: string\n): string {\n  const title = getQuestionTitle(question);\n  const inputName = (topicId + \" \" + title)\n    .split(\" \")\n    .join(\"_\")\n    .toLocaleLowerCase();\n  return inputName;\n}\n","import React from \"react\";\nimport { RadioOptionItem, RadioQuestionItem } from \"./index\";\nimport RadioOption from \"./RadioOption\";\nimport { getQuestionTitle } from \"../../store/templateUtil\";\n\ninterface Props {\n  name: string;\n  value: string;\n  question: RadioQuestionItem | string;\n  options: RadioOptionItem[];\n  onChange: (name: string, value: string) => void;\n}\n\nconst RadioQuestion: React.FC<Props> = ({\n  name,\n  question,\n  options,\n  value,\n  onChange\n}) => {\n  const isQuestionObj = typeof question === \"string\";\n  const description = isQuestionObj\n    ? \"\"\n    : (question as RadioQuestionItem).description;\n  return (\n    <div className=\"form-input input-syntax_destructuring form-component-radiogroup\">\n      <div className=\"form-group\">\n        <label htmlFor={name} className=\"form-label\">\n          {getQuestionTitle(question)}\n        </label>\n        <div className=\"form-item-contents\">\n          <div className=\"form-item-input\">\n            {options.map((option, index) => (\n              <RadioOption\n                key={index}\n                name={name}\n                index={index}\n                defaultValue={option.value}\n                label={option.label}\n                checked={value === option.value}\n                onChange={onChange}\n              />\n            ))}\n          </div>\n          {description && (\n            <small className=\"form-text\">\n              <div>\n                Example: <code>{description}</code>\n              </div>\n            </small>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RadioQuestion;\n","/* eslint-disable max-len */\nconst outline = [\n  {\n    title: \"Syntax\",\n    description: \"The grammar of JavaScript\",\n    template: \"feature\",\n    id: \"syntax\",\n    questions: [\n      {\n        title: \"Destructuring\",\n        description: \"Example: <code>const { foo } = bar</code>\"\n      },\n      {\n        title: \"Spread operator\",\n        description: \"Example: <code>[...array1, ...array2]</code>\"\n      },\n      {\n        title: \"Arrow Functions\",\n        description: \"Example: <code>const foo = () => {}</code>\"\n      }\n    ]\n  },\n  {\n    title: \"Language\",\n    description: \"The vocabulary of JavaScript\",\n    template: \"feature\",\n    id: \"language\",\n    questions: [\"Proxies\", \"Async/Await\", \"Promises\", \"Decorators\"]\n  },\n  {\n    title: \"Data Structures\",\n    description: \"How you store and manipulate data\",\n    template: \"feature\",\n    id: \"dataStructures\",\n    questions: [\"Maps\", \"Sets\", \"Typed Arrays\", \"Array.prototype.flat\"]\n  },\n  {\n    title: \"Browser APIs\",\n    description: \"The features provided by the browser\",\n    template: \"feature\",\n    id: \"browserAPIs\",\n    questions: [\n      \"Service Workers\",\n      \"LocalStorage\",\n      \"i18n\",\n      \"Web Components\",\n      \"Web Audio API\",\n      \"WebGL\",\n      \"Web Animations API\",\n      \"WebRTC\",\n      \"Web Speech API\",\n      \"WebVR\",\n      \"Websocket\",\n      \"Fetch API\"\n    ]\n  },\n  {\n    title: \"Other Features\",\n    description: \"Other technologies and patterns\",\n    template: \"feature\",\n    id: \"feature\",\n    questions: [\"Progressive Web Apps (PWA)\", \"WebAssembly (WASM)\"]\n  },\n  {\n    title: \"Patterns\",\n    description: \"How you prefer writing code\",\n    template: \"pattern\",\n    id: \"patterns\",\n    questions: [\n      \"Object-Oriented Programming\",\n      \"Functional Programming\",\n      \"Reactive Programming\"\n    ]\n  },\n  {\n    title: \"JavaScript Flavors\",\n    description: \"Languages that compile to JavaScript\",\n    template: \"tool\",\n    id: \"flavors\",\n    questions: [\n      \"TypeScript\",\n      \"Reason\",\n      \"Elm\",\n      \"ClojureScript\",\n      \"PureScript\",\n      {\n        title: \"Other JavaScript Flavors\",\n        description:\n          \"Other JavaScript flavors you use not mentioned in the list above\",\n        template: \"text\"\n      },\n      {\n        title: \"Overall Happiness\",\n        description:\n          \"On a scale of one (very unhappy) to five (very happy), how happy you with the current overall state of JavaScript flavors?\",\n        template: \"happiness\"\n      }\n    ]\n  },\n  {\n    title: \"Front-end Frameworks\",\n    description: \"Front-end frameworks and libraries\",\n    template: \"tool\",\n    id: \"frontend\",\n    questions: [\n      \"React\",\n      \"Vue\",\n      \"Angular\",\n      \"Preact\",\n      \"Ember\",\n      \"Svelte\",\n      {\n        title: \"Other Front-end Frameworks\",\n        description:\n          \"Other Front-end frameworks you use not mentioned in the list above\",\n        template: \"text\"\n      },\n      {\n        title: \"Overall Happiness\",\n        description:\n          \"On a scale of one (very unhappy) to five (very happy), how happy you with the current overall state of front-end frameworks?\",\n        template: \"happiness\"\n      }\n    ]\n  },\n  {\n    title: \"Data Layer\",\n    description: \"Loading and managing data in your app\",\n    template: \"tool\",\n    id: \"datalayer\",\n    questions: [\n      \"Redux\",\n      \"Apollo\",\n      \"GraphQL\",\n      \"MobX\",\n      \"Relay\",\n      {\n        title: \"Other Data Layer Tools\",\n        description:\n          \"Other data layer tools you use not mentioned in the list above\",\n        template: \"text\"\n      },\n      {\n        title: \"Overall Happiness\",\n        description:\n          \"On a scale of one (very unhappy) to five (very happy), how happy you with the current overall state of data layer technologies?\",\n        template: \"happiness\"\n      }\n    ]\n  },\n  {\n    title: \"Back-end Frameworks\",\n    description: \"JavaScript on the server\",\n    template: \"tool\",\n    id: \"backend\",\n    questions: [\n      \"Express\",\n      \"Next.js\",\n      \"Koa\",\n      \"Meteor\",\n      \"Sails\",\n      \"FeathersJS\",\n      \"Nuxt.js\",\n      \"Gatsby.js\",\n      {\n        title: \"Other Back-end Frameworks\",\n        description:\n          \"Other back-end frameworks you use not mentioned in the list above\",\n        template: \"text\"\n      },\n      {\n        title: \"Overall Happiness\",\n        description:\n          \"On a scale of one (very unhappy) to five (very happy), how happy you with the current overall state of back-end frameworks?\",\n        template: \"happiness\"\n      }\n    ]\n  },\n  {\n    title: \"Testing\",\n    description: \"Tools for testing your code\",\n    template: \"tool\",\n    id: \"testing\",\n    questions: [\n      \"Jest\",\n      \"Mocha\",\n      \"Storybook\",\n      \"Cypress\",\n      \"Enzyme\",\n      \"Ava\",\n      \"Jasmine\",\n      \"Puppeteer\",\n      {\n        title: \"Other Testing Tools\",\n        description:\n          \"Other testing tools you use not mentioned in the list above\",\n        template: \"text\"\n      },\n      {\n        title: \"Overall Happiness\",\n        description:\n          \"On a scale of one (very unhappy) to five (very happy), how happy you with the current overall state of testing tools?\",\n        template: \"happiness\"\n      }\n    ]\n  },\n  {\n    title: \"Mobile & Desktop\",\n    description: \"JavaScript for mobile devices and desktop apps\",\n    template: \"tool\",\n    id: \"mobiledesktop\",\n    questions: [\n      \"Electron\",\n      \"React Native\",\n      \"Native Apps\",\n      \"Cordova\",\n      \"Ionic\",\n      \"NW.js\",\n      \"Expo\",\n      {\n        title: \"Other Mobile & Desktop Tools\",\n        description:\n          \"Other mobile & desktop tools you use not mentioned in the list above\",\n        template: \"text\"\n      },\n      {\n        title: \"Overall Happiness\",\n        description:\n          \"On a scale of one (very unhappy) to five (very happy), how happy you with the current overall state of mobile & desktop tools?\",\n        template: \"happiness\"\n      }\n    ]\n  },\n  {\n    title: \"Other Tools\",\n    description:\n      \"For these tools & technologies, just check the ones that you use regularly.\",\n    id: \"otherTools\",\n    questions: [\n      {\n        title: \"Utilities\",\n        description: \"Which JavaScript utilities do you regularly use?\",\n        template: \"multiple\",\n        allowmultiple: !0,\n        allowother: !0,\n        randomize: !0,\n        options: [\n          \"Immer\",\n          \"Lodash\",\n          \"Underscore\",\n          \"Moment\",\n          \"Date Fns\",\n          \"Ramda\",\n          \"jQuery\",\n          \"RxJS\"\n        ]\n      },\n      {\n        title: \"Other Utilities\",\n        template: \"text\",\n        description: \"Other utilities you use not mentioned in the list above\"\n      },\n      {\n        title: \"Text Editors\",\n        description: \"Which text editor(s) do you regularly use?\",\n        template: \"multiple\",\n        allowmultiple: !0,\n        allowother: !0,\n        randomize: !0,\n        options: [\"VS Code\", \"Sublime Text\", \"Atom\", \"Vim\", \"Emacs\", \"Webstorm\"]\n      },\n      {\n        title: \"Other Editors\",\n        template: \"text\",\n        description:\n          \"Other text editors you use not mentioned in the list above\"\n      },\n      {\n        title: \"Browsers\",\n        description:\n          \"Which browser(s) do you work in primarily during initial development?\",\n        template: \"multiple\",\n        allowmultiple: !0,\n        allowother: !0,\n        randomize: !1,\n        options: [\"Edge\", \"Chrome\", \"Safari\", \"Firefox\"]\n      },\n      {\n        title: \"Other Browsers\",\n        template: \"text\",\n        description: \"Other browsers you use not mentioned in the list above\"\n      },\n      {\n        title: \"Build Tools\",\n        description:\n          \"Which build tools do you use to compile and bundle your code?\",\n        template: \"multiple\",\n        allowmultiple: !0,\n        allowother: !0,\n        randomize: !1,\n        options: [\n          \"Webpack\",\n          \"Parcel\",\n          \"Gulp\",\n          \"RollUp\",\n          \"FuseBox\",\n          \"Browserify\"\n        ]\n      },\n      {\n        title: \"Other Build Tools\",\n        template: \"text\",\n        description: \"Other build tools you use not mentioned in the list above\"\n      },\n      {\n        title: \"Non-JS Languages\",\n        description:\n          \"Which other languages do you code in besides JavaScript and its flavors?\",\n        template: \"multiple\",\n        allowmultiple: !0,\n        allowother: !0,\n        randomize: !1,\n        options: [\n          \"PHP\",\n          \"Ruby\",\n          \"Python\",\n          \"Go\",\n          \"Rust\",\n          \"Java\",\n          \"C/C++\",\n          \"Objective-C\",\n          \"Scala\",\n          \"Swift\",\n          \"C#\",\n          \".NET\",\n          \"Haskell\",\n          \"OCaml\",\n          \"Dart\"\n        ]\n      },\n      {\n        title: \"Other Languages\",\n        template: \"text\",\n        description: \"Other languages you use not mentioned in the list above\"\n      }\n    ]\n  },\n  {\n    title: \"Resources\",\n    description: \"What JavaScript resources do you consult?\",\n    id: \"resources\",\n    questions: [\n      {\n        title: \"Blogs, News, & Magazines\",\n        description:\n          \"Which JavaScript-related blogs/magazines/etc. do you read?\",\n        template: \"multiple\",\n        allowmultiple: !0,\n        allowother: !0,\n        randomize: !0,\n        options: [\n          \"CSS Tricks\",\n          \"Smashing Magazine\",\n          \"CoDrops\",\n          \"SitePoint\",\n          \"David Walsh\",\n          \"DailyJS\",\n          \"Echo JS\",\n          \"Front-End Front\",\n          \"JavaScript Weekly\",\n          \"Dev.to\",\n          \"Best of JS\"\n        ]\n      },\n      {\n        title: \"Other Blogs\",\n        template: \"text\",\n        description:\n          \"Other blogs, etc. you read not mentioned in the list above\"\n      },\n      {\n        title: \"Sites & Courses\",\n        description:\n          \"Which JavaScript-related sites/courses/etc. do you consult?\",\n        template: \"multiple\",\n        allowmultiple: !0,\n        allowother: !0,\n        randomize: !0,\n        options: [\n          \"Stack Overflow\",\n          \"MDN\",\n          \"W3Schools\",\n          \"FreeCodeCamp\",\n          \"Codecademy\",\n          \"LevelUp Tutorials\",\n          \"Wes Bos Courses (CSSGrid.io, Flexbox.io, etc.)\",\n          \"Pluralsight\",\n          \"DesignCode\"\n        ]\n      },\n      {\n        title: \"Other Courses\",\n        template: \"text\",\n        description:\n          \"Other sites, courses, etc. you consult not mentioned in the list above\"\n      },\n      {\n        title: \"Podcasts\",\n        description:\n          \"Which JavaScript or programming-related podcasts do you listen to?\",\n        template: \"multiple\",\n        allowmultiple: !0,\n        allowother: !0,\n        randomize: !0,\n        options: [\n          \"Shop Talk Show\",\n          \"The Changelog\",\n          \"Syntax\",\n          \"JS Party\",\n          \"JavaScript Jabber\",\n          \"Full Stack Radio\",\n          \"Front End Happy Hour\",\n          \"JAMstack Radio\",\n          \"The Web Platform Podcast\",\n          \"Modern Web\",\n          \"CodePen Radio\"\n        ]\n      },\n      {\n        title: \"Other Podcasts\",\n        template: \"text\",\n        description:\n          \"Other podcasts you listen to not mentioned in the list above\"\n      }\n    ]\n  },\n  {\n    title: \"Opinion Questions\",\n    description: \"How do you feel about the state of JavaScript?\",\n    id: \"opinionQuestions\",\n    questions: [\n      {\n        title: \"JavaScript is moving in the right direction\",\n        template: \"opinion\"\n      },\n      {\n        title: \"Building JavaScript apps is overly complex right now\",\n        template: \"opinion\"\n      },\n      {\n        title: \"JavaScript is over-used online\",\n        template: \"opinion\"\n      },\n      {\n        title: \"I enjoy building JavaScript apps\",\n        template: \"opinion\"\n      },\n      {\n        title: \"I would like JavaScript to be my main programming language\",\n        template: \"opinion\"\n      },\n      {\n        title: \"The JavaScript ecosystem is changing too fast\",\n        template: \"opinion\"\n      },\n      {\n        title: \"What do you feel is currently missing from JavaScript?\",\n        description: \"Features you'd like to see in JavaScript one day.\",\n        template: \"longtext\"\n      }\n    ]\n  },\n  {\n    title: \"About You\",\n    description: \"Let's get to know the real you.\",\n    id: \"aboutYou\",\n    questions: [\n      {\n        title: \"Years of Experience\",\n        description: \"How long you've been writing JavaScript.\",\n        template: \"multiple\",\n        allowmultiple: !1,\n        allowother: !1,\n        randomize: !1,\n        options: [\n          \"Less than one year\",\n          \"1-2 years\",\n          \"2-5 years\",\n          \"5-10 years\",\n          \"10-20 years\",\n          \"20+ years\"\n        ]\n      },\n      {\n        title: \"Job Title\",\n        description: \"How do you introduce yourself at parties?\",\n        template: \"multiple\",\n        allowmultiple: !1,\n        allowother: !0,\n        randomize: !1,\n        options: [\n          \"Front-end Developer/Engineer\",\n          \"Full-stack Developer/Engineer\",\n          \"Back-end Developer/Engineer\",\n          \"Web Developer\"\n        ]\n      },\n      {\n        title: \"Other Job Title\",\n        template: \"text\",\n        description: \"Other job title you use not mentioned in the list above\"\n      },\n      {\n        title: \"CSS Proficiency\",\n        description:\n          \"How proficient are you at writing CSS? (pick the most advanced option corresponding to your skills)\",\n        template: \"multiple\",\n        allowmultiple: !1,\n        allowother: !1,\n        randomize: !1,\n        options: [\n          \"Level 1: virtually no knowledge of CSS\",\n          \"Level 2: using CSS frameworks and tweaking existing styles\",\n          \"Level 3: knowing specificity rules, being able to create layouts\",\n          \"Level 4: mastering animations, interactions, transitions, etc.\",\n          \"Level 5: being able to style an entire front-end from scratch following a consistent methodology\"\n        ]\n      },\n      {\n        title: \"Back-end Proficiency\",\n        description:\n          \"How proficient are you at back-end development? (pick the most advanced option corresponding to your skills)\",\n        template: \"multiple\",\n        allowmultiple: !1,\n        allowother: !1,\n        randomize: !1,\n        options: [\n          \"Level 1: not able to handle any back-end work\",\n          \"Level 2: able to set up all-in-one CMSs (WordPress, etc.) or static site generators (Jekyll, etc.)\",\n          \"Level 3: able to develop apps using pre-existing frameworks (Rails, Laravel, etc.)\",\n          \"Level 4: setting up an entire back-end from scratch (Go, Node, etc.)\",\n          \"Level 5: able to handle complex multi-server or microservices architectures\"\n        ]\n      },\n      {\n        title: \"Company Size\",\n        template: \"multiple\",\n        allowmultiple: !1,\n        allowother: !1,\n        randomize: !1,\n        options: [\n          \"Just me\",\n          \"1-5 people\",\n          \"5-10 people\",\n          \"10-20 people\",\n          \"20-50 people\",\n          \"50-100 people\",\n          \"100-1000 people\",\n          \"1000+ people\"\n        ]\n      },\n      {\n        title: \"Yearly Salary\",\n        description: \"In USD\",\n        template: \"multiple\",\n        allowmultiple: !1,\n        allowother: !1,\n        randomize: !1,\n        options: [\n          \"I work for free :(\",\n          \"$0-$10k\",\n          \"$10k-$30k\",\n          \"$30k-$50k\",\n          \"$50k-$100k\",\n          \"$100k-$200k\",\n          \"$200k+\"\n        ]\n      },\n      {\n        title: \"How did you find out about this survey?\",\n        template: \"text\"\n      },\n      {\n        title: \"Your Gender\",\n        template: \"multiple\",\n        allowmultiple: !1,\n        allowother: !0,\n        options: [\n          \"Female\",\n          \"Male\",\n          \"Non-binary/ third gender\",\n          \"Prefer not to say\"\n        ]\n      },\n      {\n        title: \"Other Gender\",\n        template: \"text\",\n        description: \"Other gender not mentioned in the list above\"\n      },\n      {\n        title: \"Your Country\",\n        template: \"country\"\n      },\n      {\n        title: \"Your Email\",\n        description:\n          \"If you'd like to be notified when survey results are available. Your email won't be used for any other purpose.\",\n        template: \"email\",\n        isprivate: !0,\n        searchable: !0\n      }\n    ]\n  }\n];\n\nexport default outline;\n","import React from \"react\";\nimport outline from \"../../store/outline\";\n\ninterface Props {\n  topicIndex: number;\n  setTopicIndex: (i: number) => void;\n  formValues: object;\n}\n\nconst Nav: React.FC<Props> = ({ topicIndex, setTopicIndex, formValues }) => {\n  const outlineOk = outline.map(topic => {\n    const keys = Object.keys(formValues).filter(key =>\n      key.startsWith(topic.id)\n    );\n    const finished = (keys.length / topic.questions.length) * 100;\n    return { ...topic, finished };\n  });\n  return (\n    <nav className=\"section-nav section-nav-hidden\">\n      <div className=\"section-nav-inner\">\n        <div className=\"section-nav-head\">\n          <h3 className=\"section-nav-heading\">Table of Contents</h3>\n          <span className=\"section-nav-toggle\">▶</span>\n        </div>\n        <div className=\"section-nav-contents\">\n          <ul>\n            {outlineOk.map((topic, i) => (\n              <li key={topic.title} className=\"section-nav-item\">\n                <a\n                  className={i === topicIndex ? \"active\" : \"\"}\n                  onClick={() => setTopicIndex(i)}\n                  href={\"#\" + i}\n                >\n                  {topic.title}\n                  {topic.finished > 0 && (\n                    <span className=\"section-nav-item-completion\">\n                      {\" \"}\n                      {topic.finished.toFixed(0)}%\n                    </span>\n                  )}\n                </a>\n              </li>\n            ))}\n          </ul>\n          <p className=\"completion-message\">\n            Note: all questions are optional, reaching 100% completion is not\n            required.\n          </p>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\n\ninterface Props {\n  btnKey: number;\n  label: string;\n  onClick: () => void;\n}\n\nconst Button: React.FC<Props> = ({ btnKey, label, onClick }) => {\n  return (\n    <button\n      key={btnKey}\n      type=\"submit\"\n      className=\"loading-button-notloading btn btn-primary\"\n      onClick={onClick}\n    >\n      <span style={{ position: \"relative\" }}>\n        <span>{label}</span>\n        <span style={{ display: \"none\" }}>\n          <div className=\"spinner undefined\">\n            <div className=\"bounce1\" />\n            <div className=\"bounce2\" />\n            <div className=\"bounce3\" />\n          </div>\n        </span>\n      </span>\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport Button from \"./Button\";\nimport { Topic } from \"./index\";\nimport { navigate } from \"@reach/router\";\n\ninterface Props {\n  btnKey: number;\n  topicIndex: number;\n  setTopicIndex: (index: number) => void;\n  outline: Topic[];\n}\n\nconst Footer: React.FC<Props> = ({\n  btnKey,\n  topicIndex,\n  setTopicIndex,\n  outline\n}) => {\n  const topicPrev = outline[topicIndex - 1];\n  const topicNext = outline[topicIndex + 1];\n  return (\n    <div className=\"form-submit form-section-nav form-section-nav-bottom\">\n      <div className=\"form-submit-actions\">\n        {topicIndex > 0 ? (\n          <Button\n            btnKey={btnKey + 1}\n            label={`« ${topicPrev && topicPrev.title}`}\n            onClick={() => setTopicIndex(topicIndex - 1)}\n          />\n        ) : (\n          <div className=\"prev-placeholder\" />\n        )}\n\n        {topicIndex !== outline.length - 1 && (\n          <Button\n            btnKey={btnKey - 1}\n            label={`${topicNext && topicNext.title} »`}\n            onClick={() => setTopicIndex(topicIndex + 1)}\n          />\n        )}\n        {topicIndex === outline.length - 1 && (\n          <Button\n            btnKey={btnKey - 1}\n            label={`Finish Survey »`}\n            onClick={() => navigate(\"/thank\")}\n          />\n        )}\n      </div>\n      <div className=\"form-submit-help\">\n        Your data is saved whenever you navigate to the previous or next\n        section.\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\ninterface Props {\n  inputKey: string;\n  label: string;\n  description?: string;\n}\n\nconst Input: React.FC<Props> = ({ inputKey, label, description }) => {\n  return (\n    <div className=\"form-input form-component-textarea\">\n      <div className=\"form-group\">\n        <label htmlFor={inputKey} className=\"form-label\">\n          {label}\n        </label>\n        <div className=\"form-item-contents\">\n          <div className=\"form-item-input\">\n            <textarea\n              name={inputKey}\n              id={inputKey}\n              className=\"form-control\"\n              defaultValue={\"\"}\n            />\n          </div>\n          {description && (\n            <small className=\"form-text\">\n              {/* eslint-disable-next-line react/no-unescaped-entities */}\n              <div>{description}</div>\n            </small>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport { QuestionItem } from \"./index\";\n\ninterface Props {\n  name: string;\n  question: QuestionItem;\n  onChange: (name: string, value: Set<string>) => void;\n  value: Set<string>;\n}\n\nconst CheckboxQuestion: React.FC<Props> = ({\n  name,\n  question,\n  value,\n  onChange\n}) => {\n  const valueOk = value || new Set<string>();\n  return (\n    <div className=\"form-input form-component-checkboxgroup\">\n      <div className=\"form-group\">\n        <label htmlFor={name} className=\"form-label\">\n          {question.title}\n        </label>\n        <div className=\"form-item-contents\">\n          <div className=\"form-item-input\">\n            <div>\n              {question.options.map((label, i) => (\n                <div key={i} className=\"form-check\">\n                  <input\n                    name={name}\n                    type=\"checkbox\"\n                    id={name + i}\n                    className=\"form-check-input\"\n                    defaultValue=\"false\"\n                    checked={valueOk.has(label)}\n                    onChange={() => {\n                      valueOk.add(label);\n                      onChange(name, new Set(valueOk));\n                    }}\n                  />\n                  <label htmlFor={name + i} className=\"form-check-label\">\n                    {label}\n                  </label>\n                </div>\n              ))}\n            </div>\n          </div>\n          {question.description && (\n            <small className=\"form-text\">\n              <div>{question.description}</div>\n            </small>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CheckboxQuestion;\n","import * as React from \"react\";\nexport type SurveyState = { formValues: object };\nconst initState = { formValues: {} };\nexport const SurveyStateContext = React.createContext<SurveyState>(initState);\nexport const SurveyDispatchContext = React.createContext<Function>(() => {});\ntype Action = { type: string; data: object };\n\nconst reducer = (prevState: SurveyState, action: Action) => {\n  switch (action.type) {\n    case \"ChangeInput\":\n      return {\n        ...prevState,\n        formValues: { ...prevState.formValues, ...action.data }\n      };\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n};\n\nexport const useSurveyState = () => React.useContext(SurveyStateContext);\nexport const useSurveyDispatch = () => React.useContext(SurveyDispatchContext);\n\nconst SurveyStore: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [state, dispatch] = React.useReducer(reducer, initState);\n  return (\n    <SurveyStateContext.Provider value={state}>\n      <SurveyDispatchContext.Provider value={dispatch}>\n        {children}\n      </SurveyDispatchContext.Provider>\n    </SurveyStateContext.Provider>\n  );\n};\nexport default SurveyStore;\n","import React, { FormEvent } from \"react\";\nimport RadioQuestion from \"./RadioQuestion\";\nimport outline from \"../../store/outline\";\nimport Nav from \"./Nav\";\nimport Footer from \"./Footer\";\nimport {\n  getQuestionName,\n  getTemplateInput,\n  getTemplateOptions\n} from \"../../store/templateUtil\";\nimport Input from \"./Input\";\nimport CheckboxQuestion from \"./CheckboxQuestion\";\nimport { useSurveyDispatch, useSurveyState } from \"../../store/surveyStore\";\n\nexport interface Template {\n  feature: GetFormItemOpt;\n  pattern: GetFormItemOpt;\n  tool: GetFormItemOpt;\n  multiple: GetFormItemOpt;\n  text: GetFormItemOpt;\n  longtext: GetFormItemOpt;\n  opinion: GetFormItemOpt;\n  happiness: GetFormItemOpt;\n}\n\nexport type QuestionType = RadioQuestionItem | QuestionItem | string;\n\nexport interface Topic {\n  id: string;\n  title: string;\n  description?: string;\n  template?: keyof Template;\n  questions: QuestionType[];\n}\n\nexport interface RadioQuestionItem {\n  title: string;\n  description: string;\n}\n\nexport interface QuestionItem {\n  title: string;\n  description: string;\n  template: string;\n  allowmultiple: boolean;\n  allowother: boolean;\n  randomize: boolean;\n  options: string[];\n}\n\nexport type RadioOptionItem = { value: string; label: string };\nexport type QuestionOpt = {\n  input: string;\n  options: RadioOptionItem[];\n};\ntype GetFormItemOpt = () => QuestionOpt;\n\nconst Index: React.FC<{ default: boolean }> = () => {\n  const [topicIndex, setTopicIndex] = React.useState(0);\n  const [btnKey, setBtnKey] = React.useState(0);\n  const topic = outline[topicIndex] as Topic;\n  const dispatch = useSurveyDispatch();\n  const [values, setValues] = React.useState(\n    {} as { [k: string]: string | Set<string> }\n  );\n  const submit = React.useCallback(\n    (e: FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      setBtnKey(Math.random());\n      dispatch({ type: \"ChangeInput\", data: values });\n    },\n    [values]\n  );\n  React.useEffect(() => {\n    document.documentElement.scrollTo({ top: 0 });\n  }, [topicIndex]);\n  const onChange = React.useCallback(\n    (name, value) => setValues(values => ({ ...values, [name]: value })),\n    []\n  );\n  const { formValues } = useSurveyState();\n  return (\n    <div className=\"survey-section\">\n      <Nav\n        topicIndex={topicIndex}\n        setTopicIndex={setTopicIndex}\n        formValues={formValues}\n      />\n      <div className=\"section-contents\">\n        <div className=\"section-questions\">\n          <h2 className=\"section-title\">{topic.title}</h2>\n          <h3 className=\"section-description\">{topic.description}</h3>\n          <form className=\"document-edit\" onSubmit={submit}>\n            <div className=\"form-errors\" />\n            <div className=\"form-section form-section-default form-section-default\">\n              <div>\n                {topic.questions.map((question, i) => {\n                  const input = getTemplateInput(question, topic);\n                  if (input === \"radiogroup\")\n                    return (\n                      <RadioQuestion\n                        key={topic.id + i}\n                        options={getTemplateOptions(question, topic)}\n                        name={getQuestionName(question, topic.id)}\n                        question={question}\n                        value={\n                          values[getQuestionName(question, topic.id)] as string\n                        }\n                        onChange={onChange}\n                      />\n                    );\n                  if (input === \"checkboxgroup\")\n                    return (\n                      <CheckboxQuestion\n                        key={topic.id + i}\n                        name={getQuestionName(question, topic.id)}\n                        question={question as QuestionItem}\n                        value={\n                          values[getQuestionName(question, topic.id)] as Set<\n                            string\n                          >\n                        }\n                        onChange={onChange}\n                      />\n                    );\n                  if (input === \"text\")\n                    return (\n                      <Input\n                        key={topic.id + i}\n                        inputKey={topic.id + i}\n                        label={(question as RadioQuestionItem).title}\n                        description={\n                          (question as RadioQuestionItem).description\n                        }\n                      />\n                    );\n                  return \"\";\n                })}\n              </div>\n            </div>\n            <Footer\n              btnKey={btnKey}\n              topicIndex={topicIndex}\n              setTopicIndex={setTopicIndex}\n              outline={outline as Topic[]}\n            />\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Index;\n","import React from \"react\";\n\nconst Thank: React.FC<{ path: string }> = ({}) => {\n  return (\n    <div className=\"contents-narrow thanks\">\n      <p>Thanks for filling out the survey!</p>\n      <p>\n        Your data is saved. You can review or modify it until the survey closes.\n      </p>\n      <p>\n        {\"Also, you can help us get the word out by sharing this survey. \" +\n          \"Every bit counts, and it'll help make our data even more representative:\"}\n      </p>\n      <p>\n        <a href=\"/\">Back</a>\n      </p>\n    </div>\n  );\n};\n\nexport default Thank;\n","import React from \"react\";\nimport \"./App.css\";\nimport Survey from \"./pages/survey\";\nimport SurveyStore from \"./store/surveyStore\";\nimport Thank from \"./pages/thank\";\nimport { Router } from \"@reach/router\";\n\nconst App: React.FC = () => {\n  return (\n    <SurveyStore>\n      <div className=\"main-contents\">\n        <Router>\n          <Survey default />\n          <Thank path=\"thank\" />\n        </Router>\n      </div>\n    </SurveyStore>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}